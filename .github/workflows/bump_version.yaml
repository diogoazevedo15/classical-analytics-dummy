name: "Bump Versions"

permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      pull_request_number:
        description: "The number of the pull request (if you need it)."
        required: false
        type: number
      pr_labels:
        description: "The PR labels in JSON format."
        required: false
        type: string
      pr_title:
        description: "The PR title."
        required: false
        type: string
      base_ref:
        description: "The base ref of the PR."
        required: false
        type: string
      head_ref:
        description: "The head branch of the PR, where the changes should be committed."
        required: true
        type: string

jobs:
  bump_versions:
    runs-on: ubuntu-latest

    env:
      PR_NUMBER: ${{ inputs.pull_request_number }}
      PR_LABELS: ${{ inputs.pr_labels }}
      PR_TITLE: ${{ inputs.pr_title }}
      BASE_REF: ${{ inputs.base_ref }}
      HEAD_REF: ${{ inputs.head_ref }}

    outputs:
      old_version: ${{ steps.get_old_version.outputs.old_version }}
      new_version: ${{ steps.get_new_version.outputs.new_version }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          # Checkout the head branch so commits can be pushed back.
          ref: ${{ env.HEAD_REF }}

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: "Install Dependencies"
        run: |
          pip install pyyaml

      - name: "Get old version"
        id: get_old_version
        run: |
          echo "=== [INFO] Retrieving current global version from version.yaml ==="
          old_version=$(python .github/scripts/bump_versions/manage_global_version.py get_version | tail -n 1)
          echo "Current version: $old_version"
          echo "old_version=$old_version" >> $GITHUB_OUTPUT

      - name: "Bump version"
        run: |
          echo "=== [INFO] Bumping global version (if applicable) based on PR labels ==="
          python .github/scripts/bump_version/manage_global_version.py bump

      - name: "Get new version"
        id: get_new_version
        run: |
          echo "=== [INFO] Retrieving new global version ==="
          new_version=$(python .github/scripts/bump_version/manage_global_version.py get_version | tail -n 1)
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: "Bump Azure versions"
        run: |
          echo "=== [INFO] Updating Azure pipeline/component/environment YAMLs with new version ==="
          python .github/scripts/bump_versions/manage_azure_versions.py ${{ steps.get_new_version.outputs.new_version }}

      - name: "Commit version bump"
        run: |
          echo "=== [INFO] Committing any version.yaml changes back to branch $HEAD_REF ==="
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.yaml

          # If nothing changed, the commit will fail. Let's ignore that failure gracefully.
          git commit -m "Bump version to ${{ steps.get_new_version.outputs.new_version }} [PR #${{ env.PR_NUMBER }}]" || echo "No changes to commit"

          echo "=== [INFO] Pushing changes to $HEAD_REF ==="
          git push origin $HEAD_REF
