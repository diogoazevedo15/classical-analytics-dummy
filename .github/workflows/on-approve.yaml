name: "On Approve"

on:
  workflow_call:
    inputs:
      pull_request_number:
        description: "The pull request number"
        required: true
        type: number

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Install GH CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check approvals
        id: check_approvals
        run: |
          # Read the PR number from inputs rather than from github.event
          PR_NUMBER="${{ inputs.pull_request_number }}"
          echo "Pull Request number: $PR_NUMBER"

          # Retrieve number of APPROVED reviews
          APPROVALS=$(gh pr view "$PR_NUMBER" --json reviews --jq '.reviews | map(select(.state == "APPROVED")) | length')
          echo "Number of approvals: $APPROVALS"

          if [ "$APPROVALS" -lt 1 ]; then
            echo "Not enough approvals"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check required checks status
        id: check_checks
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const { data: { check_runs } } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha,
            });

            // Initialize status variables
            let lintCheckPassed = false;
            let repositoryTestsPassed = false;

            // Iterate over check runs to find the ones we're interested in
            for (const check of check_runs) {
              if (check.name === 'Lint Check' && check.conclusion === 'success') {
                lintCheckPassed = true;
              } else if (check.name === 'Repository Tests' && check.conclusion === 'success') {
                repositoryTestsPassed = true;
              }
            }

            if (!lintCheckPassed) {
              core.setFailed('Lint Check did not pass.');
            }

            if (!repositoryTestsPassed) {
              core.setFailed('Repository Tests did not pass.');
            }

            if (lintCheckPassed && repositoryTestsPassed) {
              console.log('All required checks have passed.');
            }
